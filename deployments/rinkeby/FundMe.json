{
  "address": "0xcBfb431E4c4Fa4EC02556d96856716aA12522eF0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundme",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "senders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withDraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb06f8415c3608e8b01cbc12242ce2ed53e0a6a5932ea0c6c10d2954ecabbacde",
  "receipt": {
    "to": null,
    "from": "0x0eeB49Fe21F9c50afc8595b659c26772005541A6",
    "contractAddress": "0xcBfb431E4c4Fa4EC02556d96856716aA12522eF0",
    "transactionIndex": 17,
    "gasUsed": "872231",
    "logsBloom": "0x
    "blockHash": "0x2215330b3aa0361ad90dce2144c592b4339b34cc9bca0a62fa8ebf21cab46986",
    "transactionHash": "0xb06f8415c3608e8b01cbc12242ce2ed53e0a6a5932ea0c6c10d2954ecabbacde",
    "logs": [],
    "blockNumber": 11149020,
    "cumulativeGasUsed": "9894146",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "320ed6e263f6a47374c969b6b4d25b8e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundme\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"senders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Rakshith kumar s\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for the funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"this contract is to demo the smaple funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\n//pragma\\npragma solidity 0.8.7;\\n\\n// imports\\nimport \\\"./Library.sol\\\";\\n\\n// error code\\nerror FundMe_NotOwner();\\n\\n/// @title A contract for the funding\\n/// @author Rakshith kumar s\\n/// @notice this contract is to demo the smaple funding contract\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n\\n  address[] public senders;\\n\\n  uint256 public constant MINIMUN_USD = 1 * 1e18;\\n  mapping(address => uint256) public addressToValue;\\n\\n  address public immutable owner;\\n\\n  AggregatorV3Interface public priceFeed;\\n\\n  constructor(address priceFeedAddress) {\\n    owner = msg.sender;\\n    priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  // modifier are used to check the prerequisites for the function\\n  // if it contains all the prerequisites, then it will the function\\n  // else it will throw the error\\n  modifier onlyOwner() {\\n    require(msg.sender == owner, \\\"you are not the owner\\\");\\n    _; // _ is used to continue the th function\\n  }\\n\\n  function fundme() public payable {\\n    require(\\n      PriceConverter.getConverstionRate(msg.value, priceFeed) > MINIMUN_USD,\\n      \\\"don't enough fund\\\"\\n    );\\n    senders.push(msg.sender);\\n    addressToValue[msg.sender] = msg.value;\\n  }\\n\\n  function withDraw() public onlyOwner {\\n    for (uint256 funderIndex = 0; funderIndex < senders.length; funderIndex++) {\\n      address senderAddress = senders[funderIndex];\\n      addressToValue[senderAddress] = 0;\\n    }\\n    senders = new address[](0);\\n\\n    // payable(msg.sender).transfer(address(this).balance);\\n    // bool snedFail = payable(msg.sender).send(address(this).balance);\\n    // require(snedFail , \\\"send Failes\\\");\\n\\n    (\\n      bool callSuccess, // bytes memory dataReturn\\n\\n    ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n    require(callSuccess, \\\"call failed\\\");\\n  }\\n\\n  receive() external payable {\\n    fundme();\\n  }\\n\\n  fallback() external payable {\\n    fundme();\\n  }\\n}\\n\",\"keccak256\":\"0x992125916fae524f1fe8dacf097969c52b2637188ddb91b6345589fd56a4c00d\",\"license\":\"MIT\"},\"contracts/Library.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n    // );\\n    (\\n      ,\\n      /*uint80 roundID*/\\n      int256 price, /*uint startedAt*/ /*uint timeStamp*/ /*uint80 answeredInRound*/\\n      ,\\n      ,\\n\\n    ) = priceFeed.latestRoundData();\\n    return uint256(price * 1e10);\\n  }\\n\\n  function getConverstionRate(\\n    uint256 ethAmount,\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethAmount * ethPrice) / 1e18;\\n    return ethAmountInUsd;\\n  }\\n\\n  // function getVersion() internal view returns (uint256) {\\n  //     //ABI\\n  //     //Address 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n  //     AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n  //         0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n  //     );\\n  //     return priceFeed.version();\\n  // }\\n}\\n\",\"keccak256\":\"0xea8e24f2cdcb66d90ed3288ebd395bb1aea3292638d5ca21f56592e575bff12a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405162000fcf38038062000fcf833981810160405281019061003491906100c7565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b6000815190506100c18161012b565b92915050565b6000602082840312156100dd576100dc610126565b5b60006100eb848285016100b2565b91505092915050565b60006100ff82610106565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610134816100f4565b811461013f57600080fd5b50565b60805160601c610e6762000168600039600081816102c901526105440152610e676000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b146100fa5780639977c78a14610125578063bff2e09514610162578063d1d9165d1461019f57610083565b80630fdb1c101461008d5780632100f479146100a4578063741bef1a146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102c7565b005b3480156100b057600080fd5b506100b9610510565b6040516100c691906109e2565b60405180910390f35b3480156100db57600080fd5b506100e461051c565b6040516100f19190610967565b60405180910390f35b34801561010657600080fd5b5061010f610542565b60405161011c919061094c565b60405180910390f35b34801561013157600080fd5b5061014c600480360381019061014791906107d6565b610566565b604051610159919061094c565b60405180910390f35b34801561016e57600080fd5b50610189600480360381019061018491906107a9565b6105a5565b60405161019691906109e2565b60405180910390f35b6101a76101a9565b005b670de0b6b3a76400006101de34600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166105bd565b1161021e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021590610982565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034c906109a2565b60405180910390fd5b60005b60008054905081101561040057600080828154811061037a57610379610cf4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f890610c4d565b915050610358565b50600067ffffffffffffffff81111561041c5761041b610d23565b5b60405190808252806020026020018201604052801561044a5781602001602082028036833780820191505090505b5060009080519060200190610460929190610699565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048790610937565b60006040518083038185875af1925050503d80600081146104c4576040519150601f19603f3d011682016040523d82523d6000602084013e6104c9565b606091505b505090508061050d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610504906109c2565b60405180910390fd5b50565b670de0b6b3a764000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061057657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b6000806105c9836105f9565b90506000670de0b6b3a764000082866105e29190610b61565b6105ec9190610a19565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064257600080fd5b505afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a9190610803565b5050509150506402540be400816106919190610a4a565b915050919050565b828054828255906000526020600020908101928215610712579160200282015b828111156107115782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b9565b5b50905061071f9190610723565b5090565b5b8082111561073c576000816000905550600101610724565b5090565b60008135905061074f81610dd5565b92915050565b60008151905061076481610dec565b92915050565b60008135905061077981610e03565b92915050565b60008151905061078e81610e03565b92915050565b6000815190506107a381610e1a565b92915050565b6000602082840312156107bf576107be610d52565b5b60006107cd84828501610740565b91505092915050565b6000602082840312156107ec576107eb610d52565b5b60006107fa8482850161076a565b91505092915050565b600080600080600060a0868803121561081f5761081e610d52565b5b600061082d88828901610794565b955050602061083e88828901610755565b945050604061084f8882890161077f565b93505060606108608882890161077f565b925050608061087188828901610794565b9150509295509295909350565b61088781610bbb565b82525050565b61089681610c17565b82525050565b60006108a9601183610a08565b91506108b482610d57565b602082019050919050565b60006108cc601583610a08565b91506108d782610d80565b602082019050919050565b60006108ef600b83610a08565b91506108fa82610da9565b602082019050919050565b60006109126000836109fd565b915061091d82610dd2565b600082019050919050565b61093181610bf7565b82525050565b600061094282610905565b9150819050919050565b6000602082019050610961600083018461087e565b92915050565b600060208201905061097c600083018461088d565b92915050565b6000602082019050818103600083015261099b8161089c565b9050919050565b600060208201905081810360008301526109bb816108bf565b9050919050565b600060208201905081810360008301526109db816108e2565b9050919050565b60006020820190506109f76000830184610928565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a2482610bf7565b9150610a2f83610bf7565b925082610a3f57610a3e610cc5565b5b828204905092915050565b6000610a5582610bcd565b9150610a6083610bcd565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610a9f57610a9e610c96565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610adc57610adb610c96565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b1957610b18610c96565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b5657610b55610c96565b5b828202905092915050565b6000610b6c82610bf7565b9150610b7783610bf7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bb057610baf610c96565b5b828202905092915050565b6000610bc682610bd7565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c2282610c29565b9050919050565b6000610c3482610c3b565b9050919050565b6000610c4682610bd7565b9050919050565b6000610c5882610bf7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c8b57610c8a610c96565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f646f6e277420656e6f7567682066756e64000000000000000000000000000000600082015250565b7f796f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b610dde81610bbb565b8114610de957600080fd5b50565b610df581610bcd565b8114610e0057600080fd5b50565b610e0c81610bf7565b8114610e1757600080fd5b50565b610e2381610c01565b8114610e2e57600080fd5b5056fea264697066735822122095985b76983bbaecba131164e3d9e7f3f78146569b168b9d4cbc9636bcb2648964736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b146100fa5780639977c78a14610125578063bff2e09514610162578063d1d9165d1461019f57610083565b80630fdb1c101461008d5780632100f479146100a4578063741bef1a146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102c7565b005b3480156100b057600080fd5b506100b9610510565b6040516100c691906109e2565b60405180910390f35b3480156100db57600080fd5b506100e461051c565b6040516100f19190610967565b60405180910390f35b34801561010657600080fd5b5061010f610542565b60405161011c919061094c565b60405180910390f35b34801561013157600080fd5b5061014c600480360381019061014791906107d6565b610566565b604051610159919061094c565b60405180910390f35b34801561016e57600080fd5b50610189600480360381019061018491906107a9565b6105a5565b60405161019691906109e2565b60405180910390f35b6101a76101a9565b005b670de0b6b3a76400006101de34600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166105bd565b1161021e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021590610982565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034c906109a2565b60405180910390fd5b60005b60008054905081101561040057600080828154811061037a57610379610cf4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f890610c4d565b915050610358565b50600067ffffffffffffffff81111561041c5761041b610d23565b5b60405190808252806020026020018201604052801561044a5781602001602082028036833780820191505090505b5060009080519060200190610460929190610699565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048790610937565b60006040518083038185875af1925050503d80600081146104c4576040519150601f19603f3d011682016040523d82523d6000602084013e6104c9565b606091505b505090508061050d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610504906109c2565b60405180910390fd5b50565b670de0b6b3a764000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061057657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b6000806105c9836105f9565b90506000670de0b6b3a764000082866105e29190610b61565b6105ec9190610a19565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064257600080fd5b505afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a9190610803565b5050509150506402540be400816106919190610a4a565b915050919050565b828054828255906000526020600020908101928215610712579160200282015b828111156107115782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b9565b5b50905061071f9190610723565b5090565b5b8082111561073c576000816000905550600101610724565b5090565b60008135905061074f81610dd5565b92915050565b60008151905061076481610dec565b92915050565b60008135905061077981610e03565b92915050565b60008151905061078e81610e03565b92915050565b6000815190506107a381610e1a565b92915050565b6000602082840312156107bf576107be610d52565b5b60006107cd84828501610740565b91505092915050565b6000602082840312156107ec576107eb610d52565b5b60006107fa8482850161076a565b91505092915050565b600080600080600060a0868803121561081f5761081e610d52565b5b600061082d88828901610794565b955050602061083e88828901610755565b945050604061084f8882890161077f565b93505060606108608882890161077f565b925050608061087188828901610794565b9150509295509295909350565b61088781610bbb565b82525050565b61089681610c17565b82525050565b60006108a9601183610a08565b91506108b482610d57565b602082019050919050565b60006108cc601583610a08565b91506108d782610d80565b602082019050919050565b60006108ef600b83610a08565b91506108fa82610da9565b602082019050919050565b60006109126000836109fd565b915061091d82610dd2565b600082019050919050565b61093181610bf7565b82525050565b600061094282610905565b9150819050919050565b6000602082019050610961600083018461087e565b92915050565b600060208201905061097c600083018461088d565b92915050565b6000602082019050818103600083015261099b8161089c565b9050919050565b600060208201905081810360008301526109bb816108bf565b9050919050565b600060208201905081810360008301526109db816108e2565b9050919050565b60006020820190506109f76000830184610928565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a2482610bf7565b9150610a2f83610bf7565b925082610a3f57610a3e610cc5565b5b828204905092915050565b6000610a5582610bcd565b9150610a6083610bcd565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610a9f57610a9e610c96565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610adc57610adb610c96565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b1957610b18610c96565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b5657610b55610c96565b5b828202905092915050565b6000610b6c82610bf7565b9150610b7783610bf7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bb057610baf610c96565b5b828202905092915050565b6000610bc682610bd7565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c2282610c29565b9050919050565b6000610c3482610c3b565b9050919050565b6000610c4682610bd7565b9050919050565b6000610c5882610bf7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c8b57610c8a610c96565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f646f6e277420656e6f7567682066756e64000000000000000000000000000000600082015250565b7f796f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b610dde81610bbb565b8114610de957600080fd5b50565b610df581610bcd565b8114610e0057600080fd5b50565b610e0c81610bf7565b8114610e1757600080fd5b50565b610e2381610c01565b8114610e2e57600080fd5b5056fea264697066735822122095985b76983bbaecba131164e3d9e7f3f78146569b168b9d4cbc9636bcb2648964736f6c63430008070033",
  "devdoc": {
    "author": "Rakshith kumar s",
    "kind": "dev",
    "methods": {},
    "title": "A contract for the funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "this contract is to demo the smaple funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "senders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToValue",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}